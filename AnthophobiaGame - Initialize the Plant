Information about object: par_plant
Sprite: spr_plant
Solid: false
Visible: true
Depth: -1
Persistent: false
Parent: 
Children: 
Mask: 

No Physics Object
Create Event:

execute code:

/// Initialize the plant
growth = false;
level = 0;
timer = 10;
moveSpeed = 0
z = 0;
wrap = 0;

draw_set_alpha_test(true);
draw_set_alpha_test_ref_value(128);

execute code:

/// Create the path
path = path_add();

Step Event:

execute code:

if image_index >= 14{
    if distance_to_object(obj_player) < 8     
        with obj_player {
            z = Approach(z, 4, 2);
            x = Approach(x, par_plant.x, 2);
            y = Approach(y, par_plant.y, 2);
            dead = true;
    }/*game_restart();*/
}

execute code:

///Grow unless seen
if growth == true {

    timer--
    
    if timer <= 1 {
        level++
        timer = room_speed*1;
    }
}

execute code:

///Stop Growing
if level < 15 { image_index = level } else image_index = 15;

execute code:

/// Path Finding
var mx = (obj_player.x div 16) * 16 -8
var my = (obj_player.y div 16) * 16 -8

if growth == true {
    if level > 15 && level <= 25 {
       moveSpeed = Approach(moveSpeed, 0.75, 0.25);
    } else if level > 25 && level <= 99{
        moveSpeed = Approach(moveSpeed, 4, 0.5);
    }
} else if growth == false && level < 100 {moveSpeed = Approach(moveSpeed, 0, 0.28);}

    if (mp_grid_path(global.grid, path, x, y, mx, my, true)) {
        path_start(path, moveSpeed, path_action_stop, false);
    }

execute code:

///Spread out
if level > 13 { 
        if (!place_meeting(x+16,y+16,obj_foliage) && !place_meeting(x+16,y+16,par_wall)) {instance_create(x+16,y+16,obj_foliage);}
        if (!place_meeting(x-16,y+16,obj_foliage) && !place_meeting(x-16,y+16,par_wall)) {instance_create(x-16,y+16,obj_foliage);}
        if (!place_meeting(x+16,y-16,obj_foliage) && !place_meeting(x+16,y-16,par_wall)) {instance_create(x+16,y-16,obj_foliage);}
        if (!place_meeting(x-16,y-16,obj_foliage) && !place_meeting(x-16,y-16,par_wall)) {instance_create(x-16,y-16,obj_foliage);}
        
        if (!place_meeting(x+16,y,obj_foliage) && !place_meeting(x+16,y,par_wall)) {instance_create(x+16,y,obj_foliage);}
        if (!place_meeting(x-16,y,obj_foliage) && !place_meeting(x-16,y,par_wall)) {instance_create(x-16,y,obj_foliage);}
        if (!place_meeting(x,y+16,obj_foliage) && !place_meeting(x,y+16,par_wall)) {instance_create(x,y+16,obj_foliage);}
        if (!place_meeting(x,y-16,obj_foliage) && !place_meeting(x,y-16,par_wall)) {instance_create(x,y-16,obj_foliage);}
        
        if (!place_meeting(x,y,obj_stem) && !place_meeting(x,y,par_wall)) {instance_create(x,y,obj_stem);}
        
} else {exit;}

Collision Event with object obj_player:

execute code:

/*if image_index >= 14{
    with obj_player {
        z = Approach(z, 4, 2);
        x = Approach(x, par_plant.x, 2);
        y = Approach(y, par_plant.y, 2);
        dead = true;
    }/*game_restart();*/
//}

Draw Event:

execute code:

/// Draw the plant
d3d_transform_set_identity();
d3d_transform_add_rotation_x(90);
d3d_transform_add_rotation_z(point_direction(x, y, obj_player.x, obj_player.y)+90);
d3d_transform_add_translation(x, y, z+16)
draw_sprite_ext(spr_plant, image_index, 0, 0, 1, 1, 0, c_white, 1);
d3d_transform_set_identity();

/*d3d_draw_wall(x, y, 16, x+sprite_width, y+sprite_height, 32, wall_tex, 1, 1);
d3d_draw_wall(x, y, 0, x+sprite_width, y+sprite_height, 16, wall_tex, 1, 1);

Draw GUI Event:

execute code:

/*draw_text(0,0,growth);
draw_text(0,40,level);
draw_text(0,80,timer);
draw_text(0,100,room_speed);


execute code:

if image_index >= 14{
    if distance_to_object(obj_player) < 2 {
        draw_sprite_ext(spr_wrap,wrap,view_wport[0]/2,view_hport[0]/2,25,25,0,c_white,1);
        if wrap < 33 {wrap++}
        draw_set_halign(fa_center);
        draw_text(view_wport[0]/2,view_hport[0]/2,"GAME OVER#Press R to restart");
        draw_set_halign(fa_left);
    } else {wrap = 0}
} 

Key Press Event for R-key Key:

execute code:

game_restart();

